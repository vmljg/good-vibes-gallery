---
import { getCollection, type CollectionEntry } from 'astro:content';
import { Image } from 'astro:assets';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  const submissions = await getCollection('submissions');
  
  return submissions.map((entry: CollectionEntry<'submissions'>) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

type Props = {
  entry: CollectionEntry<'submissions'>;
};

const { entry } = Astro.props as Props;
const { Content } = await entry.render();

// Import image dynamically
const images = import.meta.glob('/src/assets/submissions/*.{png,jpg,jpeg,webp}', { eager: true });
const hasImage = entry.data.image;
const imagePath = hasImage ? `/src/assets/submissions/${entry.data.image}` : null;
const imageModule = imagePath ? images[imagePath] as { default: ImageMetadata } | undefined : null;

// Format repository URL for display
const formatRepositoryUrl = (url?: string): string => {
  if (!url) return '';
  
  try {
    const urlObj = new URL(url);
    
    // GitHub URLs: show username/repo
    if (urlObj.hostname === 'github.com') {
      const parts = urlObj.pathname.split('/').filter(Boolean);
      if (parts.length >= 2) {
        return `${parts[0]}/${parts[1]}`;
      }
    }
    
    // CodePen URLs: show username/pen-name
    if (urlObj.hostname.includes('codepen.io')) {
      const parts = urlObj.pathname.split('/').filter(Boolean);
      if (parts.length >= 3 && parts[1] === 'pen') {
        return `${parts[0]}/${parts[2]}`;
      }
    }
    
    // Other URLs: show hostname + truncated path
    const path = urlObj.pathname + urlObj.search;
    const displayPath = path.length > 20 ? path.substring(0, 20) + '...' : path;
    return urlObj.hostname + displayPath;
  } catch {
    // Fallback for invalid URLs
    return url.length > 40 ? url.substring(0, 40) + '...' : url;
  }
};

const displayRepositoryText = formatRepositoryUrl(entry.data.repository);

// Determine label based on URL type
const getRepositoryLabel = (url?: string): string => {
  if (!url) return 'Project';
  
  try {
    const urlObj = new URL(url);
    
    if (urlObj.hostname === 'github.com') {
      return 'Repository';
    }
    
    if (urlObj.hostname.includes('codepen.io')) {
      return 'CodePen';
    }
    
    return 'Project';
  } catch {
    return 'Project';
  }
};

const repositoryLabel = getRepositoryLabel(entry.data.repository);
---

<Layout title={`${entry.data.title} - Featured - Good Vibes`}>
  <main>
    <article class="featured-page">
      <div class="featured-page__content">
        <header class="featured-page__header">
          <a href="/vibes" class="featured-page__back">‚Üê Back</a>
        </header>
        <h1 class="featured-page__title">
          <a href={entry.data.liveSite}>{entry.data.title}</a>
        </h1>
        <div class="featured-page__description">
          <Content />
        </div>
        <footer class="featured-page__footer">
          <p class="featured-page__author">
            Created by
            <a href={entry.data.authorUrl}>{entry.data.author}</a>
          </p>
        </footer>
      </div>
      <div class="featured-page__media">
        <div class="featured-page__image-section">
          <a href={entry.data.liveSite}>
            {imageModule?.default ? (
              <Image
                src={imageModule!.default}
                alt={`Featured project: ${entry.data.title}`}
                class="featured-page__image"
                widths={[400, 800, 1200]}
                sizes="100vw"
                loading="eager"
                format="webp"
              />
            ) : (
              <svg class="featured-page__image" viewBox="0 0 1200 675" xmlns="http://www.w3.org/2000/svg" preserveAspectRatio="xMidYMid slice">
                <foreignObject width="1200" height="675">
                  <iframe
                    src={entry.data.liveSite}
                    title={`${entry.data.title} preview`}
                    class="featured-page__iframe"
                    loading="eager"
                  ></iframe>
                </foreignObject>
              </svg>
            )}
          </a>
        </div>
        <div class="featured-page__meta">
          <dl class="featured-page__metrics">
            <div class="featured-page__metric no-select">
              <dt class="featured-page__metric-label">
                <a href="/vibes">Vibe</a>
              </dt>
              <dd class="featured-page__metric-value text-uppercase">
                <a href={`/vibes/${entry.data.vibe.toLowerCase()}`}>{entry.data.vibe}</a>
              </dd>
            </div>
            <div class="featured-page__metric">
              <dt class="featured-page__metric-label no-select">{repositoryLabel}</dt>
              <dd class="featured-page__metric-value">
                <a href={entry.data.repository}>{displayRepositoryText}</a>
              </dd>
            </div>
          </dl>
        </div>
      </div>
    </article>
  </main>
</Layout>

<style>
  @layer featured-page {
    .featured-page {
      display: grid;
      grid-template-columns: 1fr 1fr;
      min-block-size: 100vh;
      inline-size: 100%;
      color-scheme: light dark;
      scroll-snap-align: start;
      scroll-snap-stop: always;
    }

    .featured-page:nth-child(even) {
      direction: rtl;
    }

    .featured-page:nth-child(even) > * {
      direction: ltr;
    }

    .featured-page__content {
      display: grid;
      grid-template-columns: var(--gutter-outer) minmax(min-content, 1fr) var(
        --gutter-outer
      );
      grid-template-rows: var(--gutter-content) auto auto 1fr auto var(--gutter-content);
      grid-template-areas:
        ". . ."
        ". header ."
        ". title ."
        ". description ."
        ". footer ."
        ". . .";
      background-color: var(--bg-surface);
    }

    .featured-page__header {
      grid-area: header;
    }

    .featured-page__back {
      font-family: var(--font-sans);
      font-size: var(--text-xs);
      font-weight: 500;
      color: var(--text-primary);
      text-decoration: none;
      letter-spacing: var(--tracking-wide);
      text-transform: uppercase;
    }

    .featured-page__back:hover {
      text-decoration: underline;
    }

    .featured-page__title {
      grid-area: title;
      font-family: var(--font-sans);
      font-size: clamp(2.5rem, 8vw, 5rem);
      font-weight: 700;
      color: var(--text-primary);
      line-height: 1.1;
      view-transition-name: featured-title;
      margin: 0;
    }

    .featured-page__title a {
      color: inherit;
      text-decoration: none;
    }

    .featured-page__title a:hover {
      text-decoration: underline;
    }

    .featured-page__description {
      grid-area: description;
      align-self: center;
    }

    .featured-page__description :global(p) {
      font-family: var(--font-serif);
      font-size: clamp(1.5rem, 4vw, 2.5rem);
      font-weight: 400;
      line-height: 1.4;
      color: var(--text-primary);
      text-wrap: pretty;
      margin: 0;
    }

    .featured-page__footer {
      grid-area: footer;
      align-self: end;
    }

    .featured-page__author {
      font-family: var(--font-sans);
      font-size: var(--text-sm);
      font-weight: 500;
      color: var(--text-primary);
      letter-spacing: var(--tracking-wide);
      view-transition-name: featured-author;
      margin: 0;
    }

    .featured-page__author a {
      color: inherit;
      text-decoration: none;
    }

    .featured-page__author a:hover {
      text-decoration: underline;
    }

    .featured-page__media {
      display: grid;
      grid-template-rows: 1fr clamp(8rem, 30cqh, 16rem);
      block-size: 100vh;
      container-type: size;
    }

    .featured-page__image-section {
      position: relative;
      display: grid;
      overflow: hidden;
      aspect-ratio: auto;
    }

    .featured-page__image-section a {
      display: grid;
      inline-size: 100%;
      block-size: 100%;
      text-decoration: none;
    }

    .featured-page__image {
      background-color: var(--bg-primary);
      inline-size: 100%;
      block-size: 100%;
      object-fit: cover;
      object-position: center;
      view-transition-name: featured-image;
    }

    .featured-page__meta {
      display: flex;
      align-items: center;
      justify-content: center;
      background-color: var(--bg-featured);
      padding-inline: var(--gutter-outer);
      z-index: 1;
    }

    .featured-page__metrics {
      display: grid;
      grid-auto-flow: column;
      gap: clamp(4rem, 10vw, 8rem);
      inline-size: 100%;
    }

    .featured-page__metric {
      display: grid;
      grid-template-rows: auto auto;
      gap: 1rem;
      border-block-end: 2px solid var(--text-primary);
      padding-block-end: 1rem;
    }

    .featured-page__metric-label {
      font-family: var(--font-sans);
      font-size: var(--text-xs);
      font-weight: 500;
      color: var(--text-secondary);
      text-transform: uppercase;
      letter-spacing: var(--tracking-wide);
    }

    .featured-page__metric-label a {
      color: inherit;
      text-decoration: none;
      transition: opacity 0.2s ease;
    }

    .featured-page__metric-label a:hover {
      opacity: 0.7;
    }

    .featured-page__metric-value {
      font-family: var(--font-sans);
      font-size: clamp(1.75rem, 6vw, 3rem);
      font-weight: 900;
      color: var(--text-primary);
      line-height: 1;
    }

    .featured-page__metric-value a {
      color: inherit;
      text-decoration: none;
    }

    .featured-page__metric-value a:hover {
      text-decoration: underline;
    }

    .featured-page__metric:nth-child(2) .featured-page__metric-value {
      font-size: clamp(0.875rem, 2cqw + 0.5rem, 1.5rem);
      overflow-wrap: break-word;
      word-break: break-all;
      hyphens: auto;
    }

    .featured-page__metric:nth-child(2) .featured-page__metric-value a {
      display: block;
      overflow: hidden;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    .featured-page__iframe {
      inline-size: 100%;
      block-size: 100%;
      border: none;
    }

    @media (max-width: 48rem) {
      .featured-page {
        grid-template-columns: 1fr;
        grid-template-rows: auto auto;
        min-block-size: 100vh;
      }

      .featured-page:nth-child(even) {
        direction: ltr;
      }

      .featured-page__media {
        grid-template-rows: auto clamp(6rem, 30cqh, 12rem);
        block-size: auto;
        min-block-size: 100cqw;
      }

      .featured-page__meta {
        min-block-size: 6rem;
      }
    }
  }
</style>
